<map version="0.9.0">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1510281755578" ID="ID_54753875" MODIFIED="1510558347444" TEXT="behaviro cloning">
<node CREATED="1510281770272" ID="ID_333542145" MODIFIED="1510281772430" POSITION="right" TEXT="model.py">
<node CREATED="1510281790552" ID="ID_791675973" MODIFIED="1511156768592" TEXT="keras is used in this part">
<node CREATED="1510469682001" ID="ID_2661315" MODIFIED="1510552378989" TEXT="keras build ">
<node CREATED="1510469694686" ID="ID_850861524" MODIFIED="1510469782451" TEXT="1. input planes 3@66x200"/>
<node CREATED="1510469701046" ID="ID_953407467" MODIFIED="1510470009297" TEXT="2. normalize 3@66x200"/>
<node CREATED="1510470014988" ID="ID_886799437" MODIFIED="1510470035993" TEXT="processed with 5x5 kernal"/>
<node CREATED="1510469736510" ID="ID_16667238" MODIFIED="1510469790760" TEXT="3. conv feature map 24@31x98"/>
<node CREATED="1510470049172" ID="ID_898207089" MODIFIED="1510470051529" TEXT="processed with 5x5 kernal"/>
<node CREATED="1510469749222" ID="ID_101329690" MODIFIED="1510469817395" TEXT="4. conv feature map 36@14x47"/>
<node CREATED="1510470054908" ID="ID_1403728800" MODIFIED="1510470056121" TEXT="processed with 5x5 kernal"/>
<node CREATED="1510469818245" ID="ID_1937655459" MODIFIED="1510469851447" TEXT="5. conv feature map 48@5x22"/>
<node CREATED="1510470058996" ID="ID_303493868" MODIFIED="1510470063873" TEXT="processed with 3x3 kernal"/>
<node CREATED="1510469825533" ID="ID_381639382" MODIFIED="1510469853896" TEXT="6. conv feature map 64@3x20"/>
<node CREATED="1510470075739" ID="ID_749255517" MODIFIED="1510470077369" TEXT="processed with 3x3 kernal"/>
<node CREATED="1510469829717" ID="ID_1298046466" MODIFIED="1510469857826" TEXT="7. conv feature map 64@1x18"/>
<node CREATED="1510469866501" ID="ID_463865453" MODIFIED="1510469874187" TEXT="8. flatten"/>
<node CREATED="1510469874509" ID="ID_1260014425" MODIFIED="1510469887666" TEXT="9. fully connected layer"/>
<node CREATED="1510469896381" ID="ID_1728935086" MODIFIED="1510469898650" TEXT="10. fully connected layer"/>
<node CREATED="1510469899357" ID="ID_1991204824" MODIFIED="1510469901900" TEXT="11. fully connected layer"/>
<node CREATED="1510469903821" ID="ID_1774628541" MODIFIED="1510469907218" TEXT="12. output"/>
</node>
<node CREATED="1510470235314" ID="ID_721410710" MODIFIED="1510552380040" TEXT="keras fucntion">
<node CREATED="1510552511921" ID="ID_1316820297" MODIFIED="1510552745664" TEXT="from keras.models import Sequential and other functions"/>
<node CREATED="1510552486441" ID="ID_194760118" MODIFIED="1510552498719" TEXT="model = Sequential()"/>
<node CREATED="1510552478081" ID="ID_1154226274" MODIFIED="1510552485528" TEXT="model.add">
<node CREATED="1510552521864" ID="ID_1361472056" MODIFIED="1510552542712" TEXT="add a layer with model.add(layer parameters here)"/>
</node>
<node CREATED="1510470240098" ID="ID_299654429" MODIFIED="1510552515647" TEXT="Dense">
<node CREATED="1510470297866" ID="ID_1980279719" MODIFIED="1510470299215" TEXT="output = activation(dot(input, kernel) + bias)"/>
</node>
<node CREATED="1510552419465" ID="ID_1779963205" MODIFIED="1510552453656" TEXT="Flatten(input_shape = (32,32,3)"/>
<node CREATED="1510552461137" ID="ID_1154448532" MODIFIED="1510552476552" TEXT="Activation(&apos;relu&apos;)"/>
<node CREATED="1510552508585" ID="ID_1442698840" MODIFIED="1510552759214" TEXT="Dropout"/>
<node CREATED="1510552849198" ID="ID_258245695" MODIFIED="1510552872356" TEXT="Conv2D">
<node CREATED="1510552877438" ID="ID_1996461744" MODIFIED="1510552902508" TEXT="model.add(Conv2D(64,(3,3),activation =&apos;relu&apos;))"/>
</node>
<node CREATED="1510552991157" ID="ID_573091769" MODIFIED="1510552999387" TEXT="MaxPooling2D">
<node CREATED="1510552999997" ID="ID_1595571872" MODIFIED="1510553036532" TEXT="model.add(MaxPooling2D(pool_size=(2,2)))"/>
<node CREATED="1510553055677" ID="ID_803451577" MODIFIED="1510553055677" TEXT=""/>
</node>
<node CREATED="1510553059789" ID="ID_1405290658" MODIFIED="1510553074594" TEXT="model.compile"/>
<node CREATED="1510553074853" ID="ID_1628422387" MODIFIED="1510553080820" TEXT="model.fit"/>
<node CREATED="1510558323155" ID="ID_1064455259" MODIFIED="1510558332094" TEXT="lambda">
<node CREATED="1510558342193" ID="ID_1458466351" MODIFIED="1510558342837" TEXT="keras.layers.Lambda(function, output_shape=None, mask=None, arguments=None)"/>
</node>
</node>
<node CREATED="1510552585032" ID="ID_149161217" MODIFIED="1510552625440" TEXT="keras only have to set the input dimensions for the first layer.(after it will calculates it self)"/>
</node>
<node CREATED="1510475251395" ID="ID_1731953767" MODIFIED="1510552376903" TEXT="opencv functions(cv2)">
<node CREATED="1510475258004" ID="ID_1583274635" MODIFIED="1510475266004" TEXT="image shape">
<node CREATED="1510475266005" ID="ID_1732135416" MODIFIED="1510475276543" TEXT="img.shape"/>
</node>
<node CREATED="1510475324490" ID="ID_1898178105" MODIFIED="1510475329815" TEXT="read img">
<node CREATED="1510475331026" ID="ID_1676369398" MODIFIED="1510475332033" TEXT="cv2.imread(&apos;filename&apos;)"/>
</node>
<node CREATED="1510475335306" ID="ID_218765391" MODIFIED="1510475342883" TEXT="show img">
<node CREATED="1510475342884" ID="ID_1749607014" MODIFIED="1510475361719" TEXT="cv2.imshow(&apos; name of image &apos;, image array)"/>
</node>
</node>
</node>
<node CREATED="1510281765015" ID="ID_1117035845" MODIFIED="1510281768974" POSITION="right" TEXT="drive.py">
<node CREATED="1510281804225" ID="ID_1459962346" MODIFIED="1511156777124" TEXT="seems like no need to changeneed confirm"/>
<node CREATED="1510533285964" ID="ID_1916493583" MODIFIED="1510533296328" TEXT="load model.h5 and run in simulator">
<node CREATED="1510533331673" ID="ID_422167690" MODIFIED="1510533345543" TEXT="python drive.py model.h5"/>
</node>
</node>
<node CREATED="1510281775964" ID="ID_1138320905" MODIFIED="1511156779864" POSITION="right" TEXT="model.h5(generate from keras)"/>
<node CREATED="1510281820931" ID="ID_968790253" MODIFIED="1510281820931" POSITION="right" TEXT=""/>
<node CREATED="1510281832566" ID="ID_58299907" MODIFIED="1510475438874" POSITION="left" TEXT="model.py train">
<node CREATED="1510281839702" ID="ID_145585551" MODIFIED="1511156747025" TEXT="data generate by looping the map">
<icon BUILTIN="full-6"/>
</node>
<node CREATED="1510281857804" ID="ID_904648160" MODIFIED="1511156755336" TEXT="stay in mid of road">
<icon BUILTIN="full-5"/>
</node>
<node CREATED="1510281872287" ID="ID_1715288050" MODIFIED="1511156757656" TEXT="generate data that car out of track and turn back">
<icon BUILTIN="full-4"/>
</node>
<node CREATED="1510281909502" ID="ID_201900151" MODIFIED="1511156759860" TEXT="use several position of camears&apos; image">
<icon BUILTIN="full-3"/>
</node>
<node CREATED="1510281931814" ID="ID_1892762307" MODIFIED="1510281942907" TEXT="video is sperated into images"/>
<node CREATED="1510281943136" ID="ID_104547453" MODIFIED="1511156762353" TEXT="set the range of ROI">
<icon BUILTIN="full-2"/>
</node>
<node CREATED="1510281950364" ID="ID_921385066" MODIFIED="1511156764212" TEXT="flip data is good way to generate data">
<icon BUILTIN="full-1"/>
</node>
</node>
<node CREATED="1510282193515" ID="ID_1473985851" MODIFIED="1510282200215" POSITION="left" TEXT="data use">
<node CREATED="1510282201211" ID="ID_324451531" MODIFIED="1510282203503" TEXT="images">
<node CREATED="1511156716040" ID="ID_1254041208" MODIFIED="1511156802151" TEXT="images&apos; histogram has to be checked, if not training results can&apos;t be good">
<font BOLD="true" NAME="SansSerif" SIZE="12"/>
<icon BUILTIN="yes"/>
<icon BUILTIN="yes"/>
<icon BUILTIN="yes"/>
<icon BUILTIN="yes"/>
<icon BUILTIN="yes"/>
<icon BUILTIN="yes"/>
<icon BUILTIN="yes"/>
</node>
</node>
<node CREATED="1510282203826" ID="ID_564403250" MODIFIED="1510282207071" TEXT="steering data"/>
</node>
<node CREATED="1510282211074" ID="ID_1911729575" MODIFIED="1510282214083" POSITION="left" TEXT="output">
<node CREATED="1510282214084" ID="ID_616811773" MODIFIED="1510282222976" TEXT="steering to vehicle in simulator"/>
</node>
</node>
</map>
